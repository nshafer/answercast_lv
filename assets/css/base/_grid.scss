// Grid utilities
//
// Adapted from Paper CSS
//   Copyright (c) 2017â€“2018, Rhyne Vlaservich rhyneav@gmail.com
//   https://www.getpapercss.com/
//
// Adapted from Bootstrap
//   Copyright (c) 2011-2019 Twitter, Inc.
//   Copyright (c) 2011-2019 The Bootstrap Authors
//   https://getbootstrap.com/

@import 'css/variables';
@import 'css/mixins/media';

.row {
  display: flex;
  flex-flow: row wrap;
  margin-right: ($gutter / -2);
  margin-left: ($gutter / -2);
}

%grid-col {
  width: 100%;
  min-height: 1px; // Prevent columns from collapsing when empty
  padding-right: ($gutter / 2);
  padding-left: ($gutter / 2);
}

.col {
  @extend %grid-col;
  flex: 1 1 0;
  max-width: 100%;
}

@mixin create-grid-classes($colname, $breakpoint: null) {
  .#{$colname} {
    @extend %grid-col;
  }

  @for $i from 1 through $number-columns {
    .#{$colname}-#{$i} {
      @extend %grid-col;
    }
  }

  @include media($min: $breakpoint) {
    @if ($breakpoint != null) {
      %grid-#{$colname} {
        width: 100%;
        min-height: 1px; // Prevent columns from collapsing when empty
        padding-right: ($gutter / 2);
        padding-left: ($gutter / 2);
      }
    }
    @for $i from 1 through $number-columns {
      .#{$colname}-#{$i} {
        @extend %grid-#{$colname};
        flex: 0 0 $i * 100% / $number-columns;
        max-width: $i * 100% / $number-columns;
      }
    }
  }
}

@include create-grid-classes(col);

$i: $min-breakpoint;
@while $i <= $max-breakpoint {
  @include create-grid-classes(col-#{$i}, #{$i}px);
  $i: $i + $breakpoint-step;
}

